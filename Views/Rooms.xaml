<UserControl x:Class="WPFDeskManager.Views.Rooms"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:WPFDeskManager.ViewModels" 
             xmlns:uc="clr-namespace:WPFDeskManager.Utilities.Converters" 
             xmlns:u="clr-namespace:WPFDeskManager.Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="633" d:DesignWidth="810">

    <UserControl.DataContext>
        <vm:RoomsVM/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <uc:InverseBooleanToVisibilityConverter x:Key="InverseVisibilityConverter"/>
        <uc:DeleteButtonCommandConverter x:Key="DeleteButtonCommandConverter"/>

        <DataTemplate x:Key="Table">

            <DataGrid 
                    ItemsSource="{Binding Rooms}"
                    Style="{StaticResource TableGridStyle}"
                    ColumnHeaderStyle="{StaticResource TableColumnHeaderStyle}"
                    RowStyle="{StaticResource TableRowStyle}" 
                    CellStyle="{StaticResource TableCellStyle}"
                    Visibility="{Binding IsLoading, Converter={StaticResource InverseVisibilityConverter}}">

                <DataGrid.DataContext>
                    <vm:RoomsVM/>
                </DataGrid.DataContext>

                <DataGrid.Resources>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridRowHeader">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>


                <DataGrid.Columns>
                    <DataGridTextColumn  
                Binding ="{Binding Id}"
                x:Name="ID"
                Header="ID" 
                Width="*" 
                IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding Name}"  Width="*" IsReadOnly="True">
                        <DataGridColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TableColumnHeaderStyle}">
                                <Setter Property="Content" Value="{Binding Path=DataContext.NameTableHeader, RelativeSource={RelativeSource AncestorType={x:Type DataGridCellsPanel}}}" />
                            </Style>
                        </DataGridColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Binding ="{Binding FloorName}" Width="*" IsReadOnly="True">
                        <DataGridColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource TableColumnHeaderStyle}">
                                <Setter Property="Content" Value="{Binding Path=DataContext.FloorNameTableHeader, RelativeSource={RelativeSource AncestorType={x:Type DataGridCellsPanel}}}" />
                            </Style>
                        </DataGridColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Header="" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button 
                                        Style="{StaticResource ShowButtonStyle}" 
                                        Command="{Binding DataContext.ShowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                        CommandParameter="{Binding Id}"/>
                                    <Button 
                                        Style="{StaticResource EditButtonStyle}"
                                        Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                        CommandParameter="{Binding Id}"/>
                                    <Button 
                                        Style="{StaticResource DeleteButtonStyle}"
                                        Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                        >
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource DeleteButtonCommandConverter}">
                                                <Binding Path="Id"/>
                                                <Binding Path="Name"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>
    </UserControl.Resources>


    <Grid>

        <u:DefaultDataView 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ViewTitle="{Binding PageTitle}" 
            AddButtonText="{Binding AddButtonContent}" 
            AddButtonCommand="{Binding ShowAddWindowCommand}"
            IsLoading="{Binding IsLoading}"
            Content="{StaticResource Table}"
            >
        </u:DefaultDataView>

    </Grid>
</UserControl>
